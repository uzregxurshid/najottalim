CREATE DATABASE BUILDING_MANAGEMENT;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";


CREATE TABLE COMPANY (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255) NOT NULL,
    WEBSITE VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    PICTURE VARCHAR(255) NOT NULL
);

CREATE TABLE  BUILDING (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    COMPANY_ID UUID NOT NULL,
    PRICE_PER_SQUARE_METER DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE  TABLE  APARTMENT(
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    COUNT_OF_ROOMS INT NOT NULL,
    AREA INT NOT NULL,
    BUILDING_ID UUID NOT NULL,
    FOREIGN KEY (BUILDING_ID) REFERENCES BUILDING(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CUSTOMERS(
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    NAME VARCHAR(255) NOT NULL,
    SURNAME VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    APARTMENT_ID UUID NOT NULL,
    FOREIGN KEY (APARTMENT_ID) REFERENCES APARTMENT(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE BANKS (
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255) NOT NULL,
    WEBSITE VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    LOAN_AMOUNT DECIMAL(10,2) NOT NULL,
    LOAN_PERIOD INT NOT NULL,
    LOAN_COMPANY_ID UUID NOT NULL,
    FOREIGN KEY (LOAN_COMPANY_ID) REFERENCES COMPANY(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    PICTURE VARCHAR(255) NOT NULL
);

CREATE TABLE APPLICATION_FOR_LOAN(
    ID UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    CUSTOMER_ID UUID NOT NULL,
    BANK_ID UUID NOT NULL,
    APARTMENT_ID UUID NOT NULL,
    MONTHLY_PAYMENT DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (BANK_ID) REFERENCES BANKS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (APARTMENT_ID) REFERENCES APARTMENT(ID) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE or replace function getCompanyBuildings(myCompanyId uuid)
 returns table
(
    id uuid,
    name varchar(255),
    address varchar(255),
    company_id uuid,
    price_per_square_meter decimal(10,2)
)
language plpgsql as $$
BEGIN
   RETURN  query
   select b.id, b.name, b.address, b.company_id, b.price_per_square_meter   from building b
   where b.company_id = myCompanyId;
END;
$$;


create or replace FUNCTION getAmount(building_id uuid, APARTMENT_ID uuid)
returns decimal(10,2)
language plpgsql as $$
BEGIN
    RETURN  
    (select price_per_square_meter from building where id = building_id) *
    (select area from apartment where id = APARTMENT_ID);
END;
$$;



